(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{572:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"事件轮询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件轮询"}},[t._v("#")]),t._v(" 事件轮询")]),t._v(" "),a("ul",[a("li",[t._v("js是单线程")]),t._v(" "),a("li",[t._v("所有的代码都会在主线程执行；")]),t._v(" "),a("li",[t._v("同步任务加载即执行")]),t._v(" "),a("li",[t._v("异步任务不会立即执行，而会交给对应的管理模块")]),t._v(" "),a("li",[t._v("管理模块一直在监视异步任务是否满足条件，如果满足会将对应的回调放入callback queue 回调队列中")]),t._v(" "),a("li",[t._v("主线程上的同步任务执行完以后会通过event loop（事件伦旭机制）询问callback queue")])]),t._v(" "),a("h2",{attrs:{id:"浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("blockquote",[a("p",[t._v("每次执行一个宏任务完成以后，就去检查微任务队列是否存在微任务，有就全部执行，没有就继续执行下一个宏任务；")])]),t._v(" "),a("h3",{attrs:{id:"宏任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务"}},[t._v("#")]),t._v(" 宏任务")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("宏任务名")]),t._v(" "),a("th",[t._v("浏览器")]),t._v(" "),a("th",[t._v("Node")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("I/O")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("setTimeout")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("setInterval")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("setImmediate")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("requestAnimationFrame")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")])])])]),t._v(" "),a("ul",[a("li",[t._v("1、宏任务所处的队列就是宏任务队列")]),t._v(" "),a("li",[t._v("2、第一个宏任务队列只有一个任务，执行主线程的js代码")]),t._v(" "),a("li",[t._v("3、宏任务队列可以有很多个")]),t._v(" "),a("li",[t._v("4、当宏任务中任务全部执行完成查看微任务队列是否有微任务，如果有先执行微任务所有队列；没有微任务就查看宏任务；")])]),t._v(" "),a("h3",{attrs:{id:"微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微任务"}},[t._v("#")]),t._v(" 微任务")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("微任务名")]),t._v(" "),a("th",[t._v("浏览器")]),t._v(" "),a("th",[t._v("Node")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("process.nextTick")]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("MutationObserver")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")])]),t._v(" "),a("tr",[a("td",[t._v("Promise.then catch finally")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])])])]),t._v(" "),a("ul",[a("li",[t._v("1、微任务在微任务队列里")]),t._v(" "),a("li",[t._v("2、只有一个微任务队列")]),t._v(" "),a("li",[t._v("3、在上一个宏任务队列执行完成以后，如果有微任务队列就会执行微任务队列中的所有任务")])]),t._v(" "),a("h2",{attrs:{id:"node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" node")]),t._v(" "),a("h3",{attrs:{id:"总结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("blockquote",[a("p",[t._v("执行process.nextTick，先执行一个宏任务，执行结束检查是否存在微任务，存在就全部执行，检查有没有immediate方法，存在就按顺序执行。然后就执行下一个宏任务；")])]),t._v(" "),a("p",[t._v("node.js事件循环的机制依赖于libuv库实现的")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"setTimeout"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"setImmediate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nextTick"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nextTick")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setTimeout")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setImmediate")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("概括事件轮询机制，分为6个阶段")]),t._v(" "),a("h3",{attrs:{id:"_1、timer定时器阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、timer定时器阶段"}},[t._v("#")]),t._v(" 1、timer定时器阶段")]),t._v(" "),a("p",[a("code",[t._v("记时")]),t._v("和"),a("code",[t._v("执行")]),t._v("到点的定时器回调函数")]),t._v(" "),a("h3",{attrs:{id:"_2、pending-callbacks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、pending-callbacks"}},[t._v("#")]),t._v(" 2、pending callbacks")]),t._v(" "),a("p",[t._v("某些"),a("code",[t._v("系统操作")]),t._v("（例如TCP错误类型）的回调函数")]),t._v(" "),a("h3",{attrs:{id:"_3、idle-prepare"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、idle-prepare"}},[t._v("#")]),t._v(" 3、idle.prepare")]),t._v(" "),a("p",[t._v("准备工作")]),t._v(" "),a("h3",{attrs:{id:"_4、polll轮询阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、polll轮询阶段"}},[t._v("#")]),t._v(" 4、polll轮询阶段")]),t._v(" "),a("p",[t._v("（轮询队列）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果轮询队列不为空")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("依次同步取出轮询队列中"),a("code",[t._v("第一个回调函数执行")]),t._v("，直到轮询队列为空或者达到系统最大的限制")])])]),t._v(" "),a("li",[a("p",[t._v("如果轮询队列为空")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("如果之前设置过setImmediate函数")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("直接进入下一个check阶段")])])])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("如果之前没有设置过setImmediate函数")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("在当poll阶段等待")])])])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("直到轮询队列添加回调函数，就去第一个情况执行")])])])])])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("如果定时器到点，也会去下一个阶段")])])])])])])])]),t._v(" "),a("h3",{attrs:{id:"_5、check-查阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、check-查阶段"}},[t._v("#")]),t._v(" 5、check 查阶段")]),t._v(" "),a("p",[t._v("执行setImmediate设置的回调函数")]),t._v(" "),a("h3",{attrs:{id:"_6、close-callbacks-关闭阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、close-callbacks-关闭阶段"}},[t._v("#")]),t._v(" 6、close callbacks 关闭阶段")]),t._v(" "),a("p",[t._v("执行close事件回调")])])}),[],!1,null,null,null);s.default=e.exports}}]);