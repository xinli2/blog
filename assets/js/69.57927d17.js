(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{587:function(t,e,l){"use strict";l.r(e);var a=l(5),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"git相关问题"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#git相关问题"}},[t._v("#")]),t._v(" git相关问题")]),t._v(" "),l("h2",{attrs:{id:"pull和fetch的区别"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#pull和fetch的区别"}},[t._v("#")]),t._v(" pull和fetch的区别")]),t._v(" "),l("p",[t._v("git pull=git fetch + git merge;")]),t._v(" "),l("h3",{attrs:{id:"git-fetch"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch"}},[t._v("#")]),t._v(" git fetch")]),t._v(" "),l("p",[t._v("使用gitfetch更新代码，本地的库中master的commitID不变，假设为1；")]),t._v(" "),l("p",[t._v("但远程origin/master的commitID为2；")]),t._v(" "),l("p",[t._v("若merge时出现冲突，解决后就生成新的版本 本地代码版本commitID就变成3；")]),t._v(" "),l("p",[t._v("总结一下：")]),t._v(" "),l("ul",[l("li",[t._v("fetch是从远程获取最新版本到本地，不会自动merge；")]),t._v(" "),l("li",[t._v("fetch能获得远程新的分支；")])]),t._v(" "),l("h3",{attrs:{id:"git-pull"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[t._v("#")]),t._v(" git pull")]),t._v(" "),l("p",[t._v("使用git pull更新代码，本地库的master的commitID都变成2；")]),t._v(" "),l("p",[t._v("总结一下：")]),t._v(" "),l("ul",[l("li",[t._v("git pull 会将本地库更新致最新状态；")]),t._v(" "),l("li",[t._v("git pull 不会获得远程新的分支；")])]),t._v(" "),l("h2",{attrs:{id:"gitflow工作流"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#gitflow工作流"}},[t._v("#")]),t._v(" gitflow工作流")]),t._v(" "),l("ul",[l("li",[t._v("项目首先存在2个长期分支：主分支master，和开发分支develop；")]),t._v(" "),l("li",[t._v("主分支：存放对外发布的版本，稳定版本；")]),t._v(" "),l("li",[t._v("开发分支：日常开发，存放最新的开发版本；")]),t._v(" "),l("li",[t._v("项目存在3种短期分支：功能分支（feature branch）、补丁分支（hotfix branch）、预发分支（release branch）；")]),t._v(" "),l("li",[t._v("开发完成，短期分支就会合并进develop或master。然后就被删除；")])])])}),[],!1,null,null,null);e.default=i.exports}}]);